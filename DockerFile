# Phase 1: Build the application
# Use the smaller Node.js Alpine image as the base for both stages
FROM node:20-alpine AS builder

# Create and set the working directory
WORKDIR /usr/src/app

# Copy package.json and yarn.lock for dependency installation
COPY package.json yarn.lock ./

# Install dependencies (only necessary for building the application)
RUN yarn install --frozen-lockfile

# Copy the rest of the application code
COPY . .

# Build the NestJS application
RUN yarn build

# Phase 2: Create the production image
# Start a new, smaller image for the final production build
FROM node:20-alpine

# Create and set the working directory
WORKDIR /usr/src/app

# Copy only the necessary files from the builder stage
COPY --from=builder /usr/src/app/dist ./dist
COPY --from=builder /usr/src/app/node_modules ./node_modules
COPY --from=builder /usr/src/app/package.json ./

# Install only production dependencies
# RUN yarn install --production --frozen-lockfile

# Expose the port the app runs on
EXPOSE 8000

# Command to run the application
CMD ["yarn", "start:prod"]